// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: server.proto

package webSiteGRPC

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserInfo struct {
	Cookies              map[string]string `protobuf:"bytes,1,rep,name=cookies,proto3" json:"cookies,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastHistoryTime      int64             `protobuf:"varint,2,opt,name=lastHistoryTime,proto3" json:"lastHistoryTime,omitempty"`
	LastUpdateTime       int64             `protobuf:"varint,3,opt,name=lastUpdateTime,proto3" json:"lastUpdateTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{0}
}
func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return m.Size()
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetCookies() map[string]string {
	if m != nil {
		return m.Cookies
	}
	return nil
}

func (m *UserInfo) GetLastHistoryTime() int64 {
	if m != nil {
		return m.LastHistoryTime
	}
	return 0
}

func (m *UserInfo) GetLastUpdateTime() int64 {
	if m != nil {
		return m.LastUpdateTime
	}
	return 0
}

type VideoInfoResponse struct {
	Title                string                  `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Desc                 string                  `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
	Cover                string                  `protobuf:"bytes,3,opt,name=cover,proto3" json:"cover,omitempty"`
	Uid                  string                  `protobuf:"bytes,4,opt,name=uid,proto3" json:"uid,omitempty"`
	Duration             int64                   `protobuf:"varint,5,opt,name=duration,proto3" json:"duration,omitempty"`
	UpdateTime           int64                   `protobuf:"varint,6,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Tags                 []*TagInfoResponse      `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	Classify             []*ClassifyInfoResponse `protobuf:"bytes,8,rep,name=classify,proto3" json:"classify,omitempty"`
	ViewNumber           int64                   `protobuf:"varint,9,opt,name=viewNumber,proto3" json:"viewNumber,omitempty"`
	Danmaku              int64                   `protobuf:"varint,10,opt,name=danmaku,proto3" json:"danmaku,omitempty"`
	Reply                int64                   `protobuf:"varint,11,opt,name=reply,proto3" json:"reply,omitempty"`
	Favorite             int64                   `protobuf:"varint,12,opt,name=favorite,proto3" json:"favorite,omitempty"`
	Coin                 int64                   `protobuf:"varint,13,opt,name=coin,proto3" json:"coin,omitempty"`
	Share                int64                   `protobuf:"varint,14,opt,name=share,proto3" json:"share,omitempty"`
	NowRank              int64                   `protobuf:"varint,15,opt,name=nowRank,proto3" json:"nowRank,omitempty"`
	HisRank              int64                   `protobuf:"varint,16,opt,name=hisRank,proto3" json:"hisRank,omitempty"`
	Like                 int64                   `protobuf:"varint,17,opt,name=like,proto3" json:"like,omitempty"`
	Dislike              int64                   `protobuf:"varint,18,opt,name=dislike,proto3" json:"dislike,omitempty"`
	Evaluation           string                  `protobuf:"bytes,19,opt,name=evaluation,proto3" json:"evaluation,omitempty"`
	Authors              []*AuthorInfoResponse   `protobuf:"bytes,20,rep,name=authors,proto3" json:"authors,omitempty"`
	ViewInfo             *ViewInfoResponse       `protobuf:"bytes,21,opt,name=viewInfo,proto3" json:"viewInfo,omitempty"`
	WebSiteName          string                  `protobuf:"bytes,22,opt,name=webSiteName,proto3" json:"webSiteName,omitempty"`
	ErrorCode            int32                   `protobuf:"varint,50,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg             string                  `protobuf:"bytes,51,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *VideoInfoResponse) Reset()         { *m = VideoInfoResponse{} }
func (m *VideoInfoResponse) String() string { return proto.CompactTextString(m) }
func (*VideoInfoResponse) ProtoMessage()    {}
func (*VideoInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{1}
}
func (m *VideoInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *VideoInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_VideoInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *VideoInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VideoInfoResponse.Merge(m, src)
}
func (m *VideoInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *VideoInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_VideoInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_VideoInfoResponse proto.InternalMessageInfo

func (m *VideoInfoResponse) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *VideoInfoResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *VideoInfoResponse) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *VideoInfoResponse) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *VideoInfoResponse) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *VideoInfoResponse) GetUpdateTime() int64 {
	if m != nil {
		return m.UpdateTime
	}
	return 0
}

func (m *VideoInfoResponse) GetTags() []*TagInfoResponse {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *VideoInfoResponse) GetClassify() []*ClassifyInfoResponse {
	if m != nil {
		return m.Classify
	}
	return nil
}

func (m *VideoInfoResponse) GetViewNumber() int64 {
	if m != nil {
		return m.ViewNumber
	}
	return 0
}

func (m *VideoInfoResponse) GetDanmaku() int64 {
	if m != nil {
		return m.Danmaku
	}
	return 0
}

func (m *VideoInfoResponse) GetReply() int64 {
	if m != nil {
		return m.Reply
	}
	return 0
}

func (m *VideoInfoResponse) GetFavorite() int64 {
	if m != nil {
		return m.Favorite
	}
	return 0
}

func (m *VideoInfoResponse) GetCoin() int64 {
	if m != nil {
		return m.Coin
	}
	return 0
}

func (m *VideoInfoResponse) GetShare() int64 {
	if m != nil {
		return m.Share
	}
	return 0
}

func (m *VideoInfoResponse) GetNowRank() int64 {
	if m != nil {
		return m.NowRank
	}
	return 0
}

func (m *VideoInfoResponse) GetHisRank() int64 {
	if m != nil {
		return m.HisRank
	}
	return 0
}

func (m *VideoInfoResponse) GetLike() int64 {
	if m != nil {
		return m.Like
	}
	return 0
}

func (m *VideoInfoResponse) GetDislike() int64 {
	if m != nil {
		return m.Dislike
	}
	return 0
}

func (m *VideoInfoResponse) GetEvaluation() string {
	if m != nil {
		return m.Evaluation
	}
	return ""
}

func (m *VideoInfoResponse) GetAuthors() []*AuthorInfoResponse {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *VideoInfoResponse) GetViewInfo() *ViewInfoResponse {
	if m != nil {
		return m.ViewInfo
	}
	return nil
}

func (m *VideoInfoResponse) GetWebSiteName() string {
	if m != nil {
		return m.WebSiteName
	}
	return ""
}

func (m *VideoInfoResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *VideoInfoResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type AuthorInfoResponse struct {
	Author               string   `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Avatar               string   `protobuf:"bytes,3,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Desc                 string   `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc,omitempty"`
	Uid                  string   `protobuf:"bytes,5,opt,name=uid,proto3" json:"uid,omitempty"`
	FollowNumber         uint64   `protobuf:"varint,6,opt,name=followNumber,proto3" json:"followNumber,omitempty"`
	ErrorCode            int32    `protobuf:"varint,50,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,51,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorInfoResponse) Reset()         { *m = AuthorInfoResponse{} }
func (m *AuthorInfoResponse) String() string { return proto.CompactTextString(m) }
func (*AuthorInfoResponse) ProtoMessage()    {}
func (*AuthorInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{2}
}
func (m *AuthorInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *AuthorInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_AuthorInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *AuthorInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorInfoResponse.Merge(m, src)
}
func (m *AuthorInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *AuthorInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorInfoResponse proto.InternalMessageInfo

func (m *AuthorInfoResponse) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *AuthorInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AuthorInfoResponse) GetAvatar() string {
	if m != nil {
		return m.Avatar
	}
	return ""
}

func (m *AuthorInfoResponse) GetDesc() string {
	if m != nil {
		return m.Desc
	}
	return ""
}

func (m *AuthorInfoResponse) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *AuthorInfoResponse) GetFollowNumber() uint64 {
	if m != nil {
		return m.FollowNumber
	}
	return 0
}

func (m *AuthorInfoResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *AuthorInfoResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type TagInfoResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	ErrorCode            int32    `protobuf:"varint,50,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg             string   `protobuf:"bytes,51,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagInfoResponse) Reset()         { *m = TagInfoResponse{} }
func (m *TagInfoResponse) String() string { return proto.CompactTextString(m) }
func (*TagInfoResponse) ProtoMessage()    {}
func (*TagInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{3}
}
func (m *TagInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *TagInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_TagInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *TagInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagInfoResponse.Merge(m, src)
}
func (m *TagInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *TagInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TagInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TagInfoResponse proto.InternalMessageInfo

func (m *TagInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TagInfoResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *TagInfoResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *TagInfoResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type ClassifyInfoResponse struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id                   int64    `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClassifyInfoResponse) Reset()         { *m = ClassifyInfoResponse{} }
func (m *ClassifyInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ClassifyInfoResponse) ProtoMessage()    {}
func (*ClassifyInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{4}
}
func (m *ClassifyInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ClassifyInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ClassifyInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ClassifyInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClassifyInfoResponse.Merge(m, src)
}
func (m *ClassifyInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *ClassifyInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClassifyInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClassifyInfoResponse proto.InternalMessageInfo

func (m *ClassifyInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ClassifyInfoResponse) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type ViewInfoResponse struct {
	ViewTime             int64    `protobuf:"varint,1,opt,name=viewTime,proto3" json:"viewTime,omitempty"`
	ViewDuration         int64    `protobuf:"varint,2,opt,name=viewDuration,proto3" json:"viewDuration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ViewInfoResponse) Reset()         { *m = ViewInfoResponse{} }
func (m *ViewInfoResponse) String() string { return proto.CompactTextString(m) }
func (*ViewInfoResponse) ProtoMessage()    {}
func (*ViewInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{5}
}
func (m *ViewInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ViewInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ViewInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ViewInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ViewInfoResponse.Merge(m, src)
}
func (m *ViewInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *ViewInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ViewInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ViewInfoResponse proto.InternalMessageInfo

func (m *ViewInfoResponse) GetViewTime() int64 {
	if m != nil {
		return m.ViewTime
	}
	return 0
}

func (m *ViewInfoResponse) GetViewDuration() int64 {
	if m != nil {
		return m.ViewDuration
	}
	return 0
}

type CollectionInfoResponse struct {
	Name                 string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Uid                  string              `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Author               *AuthorInfoResponse `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	CreatTime            int64               `protobuf:"varint,4,opt,name=creatTime,proto3" json:"creatTime,omitempty"`
	AppendTime           int64               `protobuf:"varint,5,opt,name=appendTime,proto3" json:"appendTime,omitempty"`
	ErrorCode            int32               `protobuf:"varint,50,opt,name=errorCode,proto3" json:"errorCode,omitempty"`
	ErrorMsg             string              `protobuf:"bytes,51,opt,name=errorMsg,proto3" json:"errorMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *CollectionInfoResponse) Reset()         { *m = CollectionInfoResponse{} }
func (m *CollectionInfoResponse) String() string { return proto.CompactTextString(m) }
func (*CollectionInfoResponse) ProtoMessage()    {}
func (*CollectionInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{6}
}
func (m *CollectionInfoResponse) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CollectionInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CollectionInfoResponse.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CollectionInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CollectionInfoResponse.Merge(m, src)
}
func (m *CollectionInfoResponse) XXX_Size() int {
	return m.Size()
}
func (m *CollectionInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CollectionInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CollectionInfoResponse proto.InternalMessageInfo

func (m *CollectionInfoResponse) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CollectionInfoResponse) GetUid() string {
	if m != nil {
		return m.Uid
	}
	return ""
}

func (m *CollectionInfoResponse) GetAuthor() *AuthorInfoResponse {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *CollectionInfoResponse) GetCreatTime() int64 {
	if m != nil {
		return m.CreatTime
	}
	return 0
}

func (m *CollectionInfoResponse) GetAppendTime() int64 {
	if m != nil {
		return m.AppendTime
	}
	return 0
}

func (m *CollectionInfoResponse) GetErrorCode() int32 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *CollectionInfoResponse) GetErrorMsg() string {
	if m != nil {
		return m.ErrorMsg
	}
	return ""
}

type GetVideoListRequest struct {
	UserInfo             *UserInfo `protobuf:"bytes,1,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	VideoIdList          []string  `protobuf:"bytes,2,rep,name=videoIdList,proto3" json:"videoIdList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetVideoListRequest) Reset()         { *m = GetVideoListRequest{} }
func (m *GetVideoListRequest) String() string { return proto.CompactTextString(m) }
func (*GetVideoListRequest) ProtoMessage()    {}
func (*GetVideoListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ad098daeda4239f7, []int{7}
}
func (m *GetVideoListRequest) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetVideoListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetVideoListRequest.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetVideoListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetVideoListRequest.Merge(m, src)
}
func (m *GetVideoListRequest) XXX_Size() int {
	return m.Size()
}
func (m *GetVideoListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetVideoListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetVideoListRequest proto.InternalMessageInfo

func (m *GetVideoListRequest) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

func (m *GetVideoListRequest) GetVideoIdList() []string {
	if m != nil {
		return m.VideoIdList
	}
	return nil
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "webSiteGRPC.userInfo")
	proto.RegisterMapType((map[string]string)(nil), "webSiteGRPC.userInfo.CookiesEntry")
	proto.RegisterType((*VideoInfoResponse)(nil), "webSiteGRPC.videoInfoResponse")
	proto.RegisterType((*AuthorInfoResponse)(nil), "webSiteGRPC.AuthorInfoResponse")
	proto.RegisterType((*TagInfoResponse)(nil), "webSiteGRPC.tagInfoResponse")
	proto.RegisterType((*ClassifyInfoResponse)(nil), "webSiteGRPC.classifyInfoResponse")
	proto.RegisterType((*ViewInfoResponse)(nil), "webSiteGRPC.viewInfoResponse")
	proto.RegisterType((*CollectionInfoResponse)(nil), "webSiteGRPC.collectionInfoResponse")
	proto.RegisterType((*GetVideoListRequest)(nil), "webSiteGRPC.getVideoListRequest")
}

func init() { proto.RegisterFile("server.proto", fileDescriptor_ad098daeda4239f7) }

var fileDescriptor_ad098daeda4239f7 = []byte{
	// 874 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0xf9, 0xd3, 0x26, 0x2f, 0xa1, 0xed, 0x4e, 0xbb, 0xd5, 0xa8, 0x2a, 0xc1, 0xe4, 0x80,
	0x72, 0xaa, 0x96, 0xec, 0x01, 0xb6, 0x82, 0x03, 0x94, 0x25, 0x8b, 0xc4, 0x56, 0xc8, 0xa5, 0xcb,
	0x79, 0x6a, 0xbf, 0xb4, 0x43, 0x1c, 0x4f, 0x98, 0x19, 0xbb, 0xca, 0x37, 0xe1, 0xca, 0xb7, 0xe1,
	0xc8, 0x89, 0x13, 0x07, 0x54, 0x3e, 0x00, 0x5f, 0x80, 0x03, 0x9a, 0x19, 0x3b, 0xb6, 0x43, 0x50,
	0x2b, 0xba, 0x37, 0xff, 0x7e, 0xef, 0xff, 0x9b, 0xf7, 0x66, 0x0c, 0x7d, 0x85, 0x32, 0x43, 0x79,
	0xb2, 0x90, 0x42, 0x0b, 0xd2, 0xbb, 0xc5, 0xab, 0x0b, 0xae, 0x71, 0x12, 0x7c, 0x7b, 0x36, 0xfc,
	0xcd, 0x83, 0x4e, 0xaa, 0x50, 0x7e, 0x9d, 0x4c, 0x05, 0xf9, 0x14, 0xb6, 0x43, 0x21, 0x66, 0x1c,
	0x15, 0xf5, 0xfc, 0xe6, 0xa8, 0x37, 0x1e, 0x9e, 0x54, 0x74, 0x4f, 0x0a, 0xbd, 0x93, 0x33, 0xa7,
	0xf4, 0x32, 0xd1, 0x72, 0x19, 0x14, 0x26, 0x64, 0x04, 0xbb, 0x31, 0x53, 0xfa, 0x15, 0x57, 0x5a,
	0xc8, 0xe5, 0x77, 0x7c, 0x8e, 0xb4, 0xe1, 0x7b, 0xa3, 0x66, 0xb0, 0x4e, 0x93, 0x0f, 0x61, 0xc7,
	0x50, 0x97, 0x8b, 0x88, 0x69, 0xb4, 0x8a, 0x4d, 0xab, 0xb8, 0xc6, 0x1e, 0x9d, 0x42, 0xbf, 0x1a,
	0x8a, 0xec, 0x41, 0x73, 0x86, 0x4b, 0xea, 0xf9, 0xde, 0xa8, 0x1b, 0x98, 0x4f, 0x72, 0x00, 0xed,
	0x8c, 0xc5, 0xa9, 0x8b, 0xd4, 0x0d, 0x1c, 0x38, 0x6d, 0x7c, 0xe2, 0x0d, 0xff, 0x6e, 0xc3, 0x93,
	0x8c, 0x47, 0x28, 0x4c, 0xc6, 0x01, 0xaa, 0x85, 0x48, 0x14, 0x1a, 0x7d, 0xcd, 0x75, 0x8c, 0xb9,
	0x0f, 0x07, 0x08, 0x81, 0x56, 0x84, 0x2a, 0xcc, 0x9d, 0xd8, 0x6f, 0xa3, 0x19, 0x8a, 0x0c, 0xa5,
	0x4d, 0xad, 0x1b, 0x38, 0x60, 0x32, 0x48, 0x79, 0x44, 0x5b, 0x2e, 0x83, 0x94, 0x47, 0xe4, 0x08,
	0x3a, 0x51, 0x2a, 0x99, 0xe6, 0x22, 0xa1, 0x6d, 0x5b, 0xc5, 0x0a, 0x93, 0x01, 0x40, 0x5a, 0xd6,
	0xb8, 0x65, 0xa5, 0x15, 0x86, 0x3c, 0x83, 0x96, 0x66, 0xd7, 0x8a, 0x6e, 0xdb, 0x66, 0x1f, 0xd7,
	0x9a, 0xad, 0xd9, 0x75, 0x35, 0xf3, 0xc0, 0x6a, 0x92, 0xcf, 0xa0, 0x13, 0xc6, 0x4c, 0x29, 0x3e,
	0x5d, 0xd2, 0x8e, 0xb5, 0xfa, 0xa0, 0x66, 0x55, 0x08, 0x6b, 0xa6, 0x2b, 0x13, 0x93, 0x50, 0xc6,
	0xf1, 0xf6, 0x3c, 0x9d, 0x5f, 0xa1, 0xa4, 0x5d, 0x97, 0x50, 0xc9, 0x10, 0x0a, 0xdb, 0x11, 0x4b,
	0xe6, 0x6c, 0x96, 0x52, 0xb0, 0xc2, 0x02, 0x9a, 0x76, 0x48, 0x5c, 0xc4, 0x4b, 0xda, 0xb3, 0xbc,
	0x03, 0xa6, 0xf8, 0x29, 0xcb, 0x84, 0xe4, 0x1a, 0x69, 0xdf, 0x15, 0x5f, 0x60, 0xd3, 0xd4, 0x50,
	0xf0, 0x84, 0xbe, 0x6b, 0x79, 0xfb, 0x6d, 0xbc, 0xa8, 0x1b, 0x26, 0x91, 0xee, 0x38, 0x2f, 0x16,
	0x98, 0xa8, 0x89, 0xb8, 0x0d, 0x58, 0x32, 0xa3, 0xbb, 0x2e, 0x6a, 0x0e, 0x8d, 0xe4, 0x86, 0x2b,
	0x2b, 0xd9, 0x73, 0x92, 0x1c, 0x1a, 0xef, 0x31, 0x9f, 0x21, 0x7d, 0xe2, 0xbc, 0x9b, 0x6f, 0x9b,
	0x3d, 0x57, 0x96, 0x26, 0x79, 0xf6, 0x0e, 0x9a, 0xba, 0xd1, 0x8c, 0x86, 0x3b, 0xa6, 0x7d, 0x7b,
	0x7a, 0x15, 0x86, 0xbc, 0x80, 0x6d, 0x96, 0xea, 0x1b, 0x21, 0x15, 0x3d, 0xb0, 0x5d, 0x7d, 0xbf,
	0xd6, 0xd5, 0xcf, 0xad, 0xac, 0xd6, 0xd3, 0x42, 0x9f, 0xbc, 0x80, 0x8e, 0x69, 0xa0, 0x11, 0xd2,
	0xa7, 0xbe, 0x37, 0xea, 0x8d, 0xdf, 0xab, 0xd9, 0x16, 0xc2, 0xf2, 0x34, 0x0a, 0x86, 0xf8, 0x50,
	0xac, 0xe2, 0x39, 0x9b, 0x23, 0x3d, 0xb4, 0x69, 0x55, 0x29, 0x72, 0x0c, 0x5d, 0x94, 0x52, 0xc8,
	0x33, 0x11, 0x21, 0x1d, 0xfb, 0xde, 0xa8, 0x1d, 0x94, 0x84, 0xe9, 0xbe, 0x05, 0xaf, 0xd5, 0x35,
	0x7d, 0x6e, 0x8d, 0x57, 0x78, 0xf8, 0xbb, 0x07, 0xe4, 0xdf, 0x69, 0x93, 0x43, 0xd8, 0x72, 0x89,
	0xe7, 0x0b, 0x90, 0x23, 0xd3, 0xce, 0x84, 0xcd, 0x8b, 0x35, 0xb2, 0xdf, 0x56, 0x37, 0x63, 0x9a,
	0x15, 0x2b, 0x90, 0xa3, 0xd5, 0xb6, 0xb4, 0x2a, 0xdb, 0x92, 0xef, 0x45, 0xbb, 0xdc, 0x8b, 0x21,
	0xf4, 0xa7, 0x22, 0x8e, 0x45, 0x31, 0x6c, 0x66, 0xfa, 0x5b, 0x41, 0x8d, 0x7b, 0x44, 0x79, 0x02,
	0x76, 0xd7, 0x16, 0x64, 0x55, 0x82, 0x57, 0x29, 0x61, 0x07, 0x1a, 0x3c, 0xca, 0x6f, 0xa1, 0x06,
	0x8f, 0x1e, 0x11, 0xf0, 0x14, 0x0e, 0x36, 0xed, 0xd6, 0x43, 0xa2, 0x0e, 0x03, 0xd8, 0x5b, 0x9f,
	0x02, 0x13, 0xcb, 0x70, 0xf6, 0x62, 0xf0, 0xdc, 0xe6, 0x14, 0xd8, 0xb4, 0xce, 0x7c, 0x7f, 0x59,
	0x5c, 0x2b, 0xce, 0x53, 0x8d, 0x1b, 0xfe, 0xe5, 0xc1, 0x61, 0x28, 0xe2, 0x18, 0x43, 0x03, 0xef,
	0x4d, 0x29, 0x3f, 0x9f, 0x46, 0x79, 0x3e, 0x1f, 0xaf, 0x26, 0xa1, 0x69, 0xa7, 0xf6, 0xde, 0x89,
	0x2f, 0x46, 0xe5, 0x18, 0xba, 0xa1, 0x44, 0xa6, 0x6d, 0xea, 0x2d, 0x9b, 0x5a, 0x49, 0x98, 0x4d,
	0x63, 0x8b, 0x05, 0x26, 0x91, 0x15, 0xbb, 0x0b, 0xb1, 0xc2, 0x3c, 0xe2, 0x04, 0x7e, 0x80, 0xfd,
	0x6b, 0xd4, 0x6f, 0xcc, 0x95, 0xfe, 0x0d, 0x57, 0x3a, 0xc0, 0x1f, 0x53, 0x54, 0x9a, 0x7c, 0x54,
	0xbe, 0x5f, 0xb6, 0xe2, 0xde, 0xf8, 0xe9, 0xc6, 0x47, 0x2b, 0x28, 0x9f, 0x39, 0x1f, 0x7a, 0xee,
	0x65, 0x88, 0x8c, 0x23, 0xda, 0xf0, 0x9b, 0x66, 0xef, 0x2a, 0xd4, 0xf8, 0xe7, 0x26, 0xec, 0x7c,
	0xef, 0x9c, 0x5c, 0xa0, 0xcc, 0x78, 0x88, 0xe4, 0x1c, 0xf6, 0x27, 0xa8, 0x2f, 0x15, 0xca, 0xaf,
	0xec, 0x08, 0xbb, 0x67, 0x8a, 0x6c, 0x0e, 0x76, 0x34, 0x58, 0xbb, 0x03, 0xd6, 0xde, 0xa1, 0x67,
	0x1e, 0x79, 0x0d, 0x24, 0xf7, 0xf7, 0x86, 0xe3, 0x6d, 0xfe, 0x3a, 0xfe, 0x7f, 0x77, 0x01, 0xf4,
	0x27, 0x95, 0xee, 0x10, 0xbf, 0x66, 0xb1, 0xa1, 0x71, 0x0f, 0xf0, 0x79, 0x09, 0xbb, 0x13, 0xd4,
	0xaf, 0xc4, 0x5b, 0x76, 0xfb, 0x12, 0x7a, 0x13, 0xd4, 0x17, 0x18, 0x4f, 0xed, 0x69, 0xfc, 0x47,
	0xc9, 0xf7, 0xcd, 0xe3, 0x17, 0x7b, 0xbf, 0xdc, 0x0d, 0xbc, 0x5f, 0xef, 0x06, 0xde, 0x1f, 0x77,
	0x03, 0xef, 0xa7, 0x3f, 0x07, 0xef, 0x5c, 0x6d, 0xd9, 0xff, 0x9b, 0xe7, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0x20, 0x91, 0x75, 0xc2, 0xef, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WebSiteServiceClient is the client API for WebSiteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebSiteServiceClient interface {
	GetUserFollowUpdate(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (WebSiteService_GetUserFollowUpdateClient, error)
	GetUserViewHistory(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (WebSiteService_GetUserViewHistoryClient, error)
	GetVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (WebSiteService_GetVideoListClient, error)
	GetHotVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (WebSiteService_GetHotVideoListClient, error)
	GetSelfInfo(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*AuthorInfoResponse, error)
}

type webSiteServiceClient struct {
	cc *grpc.ClientConn
}

func NewWebSiteServiceClient(cc *grpc.ClientConn) WebSiteServiceClient {
	return &webSiteServiceClient{cc}
}

func (c *webSiteServiceClient) GetUserFollowUpdate(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (WebSiteService_GetUserFollowUpdateClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WebSiteService_serviceDesc.Streams[0], "/webSiteGRPC.WebSiteService/GetUserFollowUpdate", opts...)
	if err != nil {
		return nil, err
	}
	x := &webSiteServiceGetUserFollowUpdateClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WebSiteService_GetUserFollowUpdateClient interface {
	Recv() (*VideoInfoResponse, error)
	grpc.ClientStream
}

type webSiteServiceGetUserFollowUpdateClient struct {
	grpc.ClientStream
}

func (x *webSiteServiceGetUserFollowUpdateClient) Recv() (*VideoInfoResponse, error) {
	m := new(VideoInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *webSiteServiceClient) GetUserViewHistory(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (WebSiteService_GetUserViewHistoryClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WebSiteService_serviceDesc.Streams[1], "/webSiteGRPC.WebSiteService/GetUserViewHistory", opts...)
	if err != nil {
		return nil, err
	}
	x := &webSiteServiceGetUserViewHistoryClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WebSiteService_GetUserViewHistoryClient interface {
	Recv() (*VideoInfoResponse, error)
	grpc.ClientStream
}

type webSiteServiceGetUserViewHistoryClient struct {
	grpc.ClientStream
}

func (x *webSiteServiceGetUserViewHistoryClient) Recv() (*VideoInfoResponse, error) {
	m := new(VideoInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *webSiteServiceClient) GetVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (WebSiteService_GetVideoListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WebSiteService_serviceDesc.Streams[2], "/webSiteGRPC.WebSiteService/GetVideoList", opts...)
	if err != nil {
		return nil, err
	}
	x := &webSiteServiceGetVideoListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WebSiteService_GetVideoListClient interface {
	Recv() (*VideoInfoResponse, error)
	grpc.ClientStream
}

type webSiteServiceGetVideoListClient struct {
	grpc.ClientStream
}

func (x *webSiteServiceGetVideoListClient) Recv() (*VideoInfoResponse, error) {
	m := new(VideoInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *webSiteServiceClient) GetHotVideoList(ctx context.Context, in *GetVideoListRequest, opts ...grpc.CallOption) (WebSiteService_GetHotVideoListClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WebSiteService_serviceDesc.Streams[3], "/webSiteGRPC.WebSiteService/GetHotVideoList", opts...)
	if err != nil {
		return nil, err
	}
	x := &webSiteServiceGetHotVideoListClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WebSiteService_GetHotVideoListClient interface {
	Recv() (*VideoInfoResponse, error)
	grpc.ClientStream
}

type webSiteServiceGetHotVideoListClient struct {
	grpc.ClientStream
}

func (x *webSiteServiceGetHotVideoListClient) Recv() (*VideoInfoResponse, error) {
	m := new(VideoInfoResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *webSiteServiceClient) GetSelfInfo(ctx context.Context, in *UserInfo, opts ...grpc.CallOption) (*AuthorInfoResponse, error) {
	out := new(AuthorInfoResponse)
	err := c.cc.Invoke(ctx, "/webSiteGRPC.WebSiteService/GetSelfInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebSiteServiceServer is the server API for WebSiteService service.
type WebSiteServiceServer interface {
	GetUserFollowUpdate(*UserInfo, WebSiteService_GetUserFollowUpdateServer) error
	GetUserViewHistory(*UserInfo, WebSiteService_GetUserViewHistoryServer) error
	GetVideoList(*GetVideoListRequest, WebSiteService_GetVideoListServer) error
	GetHotVideoList(*GetVideoListRequest, WebSiteService_GetHotVideoListServer) error
	GetSelfInfo(context.Context, *UserInfo) (*AuthorInfoResponse, error)
}

// UnimplementedWebSiteServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWebSiteServiceServer struct {
}

func (*UnimplementedWebSiteServiceServer) GetUserFollowUpdate(req *UserInfo, srv WebSiteService_GetUserFollowUpdateServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUserFollowUpdate not implemented")
}
func (*UnimplementedWebSiteServiceServer) GetUserViewHistory(req *UserInfo, srv WebSiteService_GetUserViewHistoryServer) error {
	return status.Errorf(codes.Unimplemented, "method GetUserViewHistory not implemented")
}
func (*UnimplementedWebSiteServiceServer) GetVideoList(req *GetVideoListRequest, srv WebSiteService_GetVideoListServer) error {
	return status.Errorf(codes.Unimplemented, "method GetVideoList not implemented")
}
func (*UnimplementedWebSiteServiceServer) GetHotVideoList(req *GetVideoListRequest, srv WebSiteService_GetHotVideoListServer) error {
	return status.Errorf(codes.Unimplemented, "method GetHotVideoList not implemented")
}
func (*UnimplementedWebSiteServiceServer) GetSelfInfo(ctx context.Context, req *UserInfo) (*AuthorInfoResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSelfInfo not implemented")
}

func RegisterWebSiteServiceServer(s *grpc.Server, srv WebSiteServiceServer) {
	s.RegisterService(&_WebSiteService_serviceDesc, srv)
}

func _WebSiteService_GetUserFollowUpdate_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WebSiteServiceServer).GetUserFollowUpdate(m, &webSiteServiceGetUserFollowUpdateServer{stream})
}

type WebSiteService_GetUserFollowUpdateServer interface {
	Send(*VideoInfoResponse) error
	grpc.ServerStream
}

type webSiteServiceGetUserFollowUpdateServer struct {
	grpc.ServerStream
}

func (x *webSiteServiceGetUserFollowUpdateServer) Send(m *VideoInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WebSiteService_GetUserViewHistory_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(UserInfo)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WebSiteServiceServer).GetUserViewHistory(m, &webSiteServiceGetUserViewHistoryServer{stream})
}

type WebSiteService_GetUserViewHistoryServer interface {
	Send(*VideoInfoResponse) error
	grpc.ServerStream
}

type webSiteServiceGetUserViewHistoryServer struct {
	grpc.ServerStream
}

func (x *webSiteServiceGetUserViewHistoryServer) Send(m *VideoInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WebSiteService_GetVideoList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetVideoListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WebSiteServiceServer).GetVideoList(m, &webSiteServiceGetVideoListServer{stream})
}

type WebSiteService_GetVideoListServer interface {
	Send(*VideoInfoResponse) error
	grpc.ServerStream
}

type webSiteServiceGetVideoListServer struct {
	grpc.ServerStream
}

func (x *webSiteServiceGetVideoListServer) Send(m *VideoInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WebSiteService_GetHotVideoList_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetVideoListRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WebSiteServiceServer).GetHotVideoList(m, &webSiteServiceGetHotVideoListServer{stream})
}

type WebSiteService_GetHotVideoListServer interface {
	Send(*VideoInfoResponse) error
	grpc.ServerStream
}

type webSiteServiceGetHotVideoListServer struct {
	grpc.ServerStream
}

func (x *webSiteServiceGetHotVideoListServer) Send(m *VideoInfoResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _WebSiteService_GetSelfInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebSiteServiceServer).GetSelfInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/webSiteGRPC.WebSiteService/GetSelfInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebSiteServiceServer).GetSelfInfo(ctx, req.(*UserInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebSiteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "webSiteGRPC.WebSiteService",
	HandlerType: (*WebSiteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetSelfInfo",
			Handler:    _WebSiteService_GetSelfInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetUserFollowUpdate",
			Handler:       _WebSiteService_GetUserFollowUpdate_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetUserViewHistory",
			Handler:       _WebSiteService_GetUserViewHistory_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetVideoList",
			Handler:       _WebSiteService_GetVideoList_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "GetHotVideoList",
			Handler:       _WebSiteService_GetHotVideoList_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "server.proto",
}

func (m *UserInfo) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *UserInfo) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *UserInfo) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdateTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.LastUpdateTime))
		i--
		dAtA[i] = 0x18
	}
	if m.LastHistoryTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.LastHistoryTime))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Cookies) > 0 {
		for k := range m.Cookies {
			v := m.Cookies[k]
			baseI := i
			i -= len(v)
			copy(dAtA[i:], v)
			i = encodeVarintServer(dAtA, i, uint64(len(v)))
			i--
			dAtA[i] = 0x12
			i -= len(k)
			copy(dAtA[i:], k)
			i = encodeVarintServer(dAtA, i, uint64(len(k)))
			i--
			dAtA[i] = 0xa
			i = encodeVarintServer(dAtA, i, uint64(baseI-i))
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *VideoInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *VideoInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *VideoInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMsg) > 0 {
		i -= len(m.ErrorMsg)
		copy(dAtA[i:], m.ErrorMsg)
		i = encodeVarintServer(dAtA, i, uint64(len(m.ErrorMsg)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	if m.ErrorCode != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	if len(m.WebSiteName) > 0 {
		i -= len(m.WebSiteName)
		copy(dAtA[i:], m.WebSiteName)
		i = encodeVarintServer(dAtA, i, uint64(len(m.WebSiteName)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xb2
	}
	if m.ViewInfo != nil {
		{
			size, err := m.ViewInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0xaa
	}
	if len(m.Authors) > 0 {
		for iNdEx := len(m.Authors) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Authors[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServer(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1
			i--
			dAtA[i] = 0xa2
		}
	}
	if len(m.Evaluation) > 0 {
		i -= len(m.Evaluation)
		copy(dAtA[i:], m.Evaluation)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Evaluation)))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x9a
	}
	if m.Dislike != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Dislike))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x90
	}
	if m.Like != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Like))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x88
	}
	if m.HisRank != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.HisRank))
		i--
		dAtA[i] = 0x1
		i--
		dAtA[i] = 0x80
	}
	if m.NowRank != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.NowRank))
		i--
		dAtA[i] = 0x78
	}
	if m.Share != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Share))
		i--
		dAtA[i] = 0x70
	}
	if m.Coin != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Coin))
		i--
		dAtA[i] = 0x68
	}
	if m.Favorite != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Favorite))
		i--
		dAtA[i] = 0x60
	}
	if m.Reply != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Reply))
		i--
		dAtA[i] = 0x58
	}
	if m.Danmaku != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Danmaku))
		i--
		dAtA[i] = 0x50
	}
	if m.ViewNumber != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ViewNumber))
		i--
		dAtA[i] = 0x48
	}
	if len(m.Classify) > 0 {
		for iNdEx := len(m.Classify) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Classify[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServer(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if len(m.Tags) > 0 {
		for iNdEx := len(m.Tags) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Tags[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintServer(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x3a
		}
	}
	if m.UpdateTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.UpdateTime))
		i--
		dAtA[i] = 0x30
	}
	if m.Duration != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Duration))
		i--
		dAtA[i] = 0x28
	}
	if len(m.Uid) > 0 {
		i -= len(m.Uid)
		copy(dAtA[i:], m.Uid)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Uid)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Cover) > 0 {
		i -= len(m.Cover)
		copy(dAtA[i:], m.Cover)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Cover)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Title) > 0 {
		i -= len(m.Title)
		copy(dAtA[i:], m.Title)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Title)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *AuthorInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *AuthorInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *AuthorInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMsg) > 0 {
		i -= len(m.ErrorMsg)
		copy(dAtA[i:], m.ErrorMsg)
		i = encodeVarintServer(dAtA, i, uint64(len(m.ErrorMsg)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	if m.ErrorCode != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	if m.FollowNumber != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.FollowNumber))
		i--
		dAtA[i] = 0x30
	}
	if len(m.Uid) > 0 {
		i -= len(m.Uid)
		copy(dAtA[i:], m.Uid)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Uid)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.Desc) > 0 {
		i -= len(m.Desc)
		copy(dAtA[i:], m.Desc)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Desc)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Avatar) > 0 {
		i -= len(m.Avatar)
		copy(dAtA[i:], m.Avatar)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Avatar)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Author) > 0 {
		i -= len(m.Author)
		copy(dAtA[i:], m.Author)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Author)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *TagInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *TagInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *TagInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMsg) > 0 {
		i -= len(m.ErrorMsg)
		copy(dAtA[i:], m.ErrorMsg)
		i = encodeVarintServer(dAtA, i, uint64(len(m.ErrorMsg)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	if m.ErrorCode != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	if m.Id != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ClassifyInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ClassifyInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ClassifyInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Id != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x10
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ViewInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ViewInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ViewInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ViewDuration != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ViewDuration))
		i--
		dAtA[i] = 0x10
	}
	if m.ViewTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ViewTime))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CollectionInfoResponse) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CollectionInfoResponse) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CollectionInfoResponse) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ErrorMsg) > 0 {
		i -= len(m.ErrorMsg)
		copy(dAtA[i:], m.ErrorMsg)
		i = encodeVarintServer(dAtA, i, uint64(len(m.ErrorMsg)))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x9a
	}
	if m.ErrorCode != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.ErrorCode))
		i--
		dAtA[i] = 0x3
		i--
		dAtA[i] = 0x90
	}
	if m.AppendTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.AppendTime))
		i--
		dAtA[i] = 0x28
	}
	if m.CreatTime != 0 {
		i = encodeVarintServer(dAtA, i, uint64(m.CreatTime))
		i--
		dAtA[i] = 0x20
	}
	if m.Author != nil {
		{
			size, err := m.Author.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uid) > 0 {
		i -= len(m.Uid)
		copy(dAtA[i:], m.Uid)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Uid)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintServer(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetVideoListRequest) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetVideoListRequest) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetVideoListRequest) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.VideoIdList) > 0 {
		for iNdEx := len(m.VideoIdList) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.VideoIdList[iNdEx])
			copy(dAtA[i:], m.VideoIdList[iNdEx])
			i = encodeVarintServer(dAtA, i, uint64(len(m.VideoIdList[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.UserInfo != nil {
		{
			size, err := m.UserInfo.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintServer(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintServer(dAtA []byte, offset int, v uint64) int {
	offset -= sovServer(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *UserInfo) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Cookies) > 0 {
		for k, v := range m.Cookies {
			_ = k
			_ = v
			mapEntrySize := 1 + len(k) + sovServer(uint64(len(k))) + 1 + len(v) + sovServer(uint64(len(v)))
			n += mapEntrySize + 1 + sovServer(uint64(mapEntrySize))
		}
	}
	if m.LastHistoryTime != 0 {
		n += 1 + sovServer(uint64(m.LastHistoryTime))
	}
	if m.LastUpdateTime != 0 {
		n += 1 + sovServer(uint64(m.LastUpdateTime))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *VideoInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Title)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Cover)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Uid)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	if m.Duration != 0 {
		n += 1 + sovServer(uint64(m.Duration))
	}
	if m.UpdateTime != 0 {
		n += 1 + sovServer(uint64(m.UpdateTime))
	}
	if len(m.Tags) > 0 {
		for _, e := range m.Tags {
			l = e.Size()
			n += 1 + l + sovServer(uint64(l))
		}
	}
	if len(m.Classify) > 0 {
		for _, e := range m.Classify {
			l = e.Size()
			n += 1 + l + sovServer(uint64(l))
		}
	}
	if m.ViewNumber != 0 {
		n += 1 + sovServer(uint64(m.ViewNumber))
	}
	if m.Danmaku != 0 {
		n += 1 + sovServer(uint64(m.Danmaku))
	}
	if m.Reply != 0 {
		n += 1 + sovServer(uint64(m.Reply))
	}
	if m.Favorite != 0 {
		n += 1 + sovServer(uint64(m.Favorite))
	}
	if m.Coin != 0 {
		n += 1 + sovServer(uint64(m.Coin))
	}
	if m.Share != 0 {
		n += 1 + sovServer(uint64(m.Share))
	}
	if m.NowRank != 0 {
		n += 1 + sovServer(uint64(m.NowRank))
	}
	if m.HisRank != 0 {
		n += 2 + sovServer(uint64(m.HisRank))
	}
	if m.Like != 0 {
		n += 2 + sovServer(uint64(m.Like))
	}
	if m.Dislike != 0 {
		n += 2 + sovServer(uint64(m.Dislike))
	}
	l = len(m.Evaluation)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if len(m.Authors) > 0 {
		for _, e := range m.Authors {
			l = e.Size()
			n += 2 + l + sovServer(uint64(l))
		}
	}
	if m.ViewInfo != nil {
		l = m.ViewInfo.Size()
		n += 2 + l + sovServer(uint64(l))
	}
	l = len(m.WebSiteName)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if m.ErrorCode != 0 {
		n += 2 + sovServer(uint64(m.ErrorCode))
	}
	l = len(m.ErrorMsg)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *AuthorInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Author)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Avatar)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Desc)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Uid)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	if m.FollowNumber != 0 {
		n += 1 + sovServer(uint64(m.FollowNumber))
	}
	if m.ErrorCode != 0 {
		n += 2 + sovServer(uint64(m.ErrorCode))
	}
	l = len(m.ErrorMsg)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *TagInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovServer(uint64(m.Id))
	}
	if m.ErrorCode != 0 {
		n += 2 + sovServer(uint64(m.ErrorCode))
	}
	l = len(m.ErrorMsg)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ClassifyInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	if m.Id != 0 {
		n += 1 + sovServer(uint64(m.Id))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ViewInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ViewTime != 0 {
		n += 1 + sovServer(uint64(m.ViewTime))
	}
	if m.ViewDuration != 0 {
		n += 1 + sovServer(uint64(m.ViewDuration))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CollectionInfoResponse) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	l = len(m.Uid)
	if l > 0 {
		n += 1 + l + sovServer(uint64(l))
	}
	if m.Author != nil {
		l = m.Author.Size()
		n += 1 + l + sovServer(uint64(l))
	}
	if m.CreatTime != 0 {
		n += 1 + sovServer(uint64(m.CreatTime))
	}
	if m.AppendTime != 0 {
		n += 1 + sovServer(uint64(m.AppendTime))
	}
	if m.ErrorCode != 0 {
		n += 2 + sovServer(uint64(m.ErrorCode))
	}
	l = len(m.ErrorMsg)
	if l > 0 {
		n += 2 + l + sovServer(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetVideoListRequest) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.UserInfo != nil {
		l = m.UserInfo.Size()
		n += 1 + l + sovServer(uint64(l))
	}
	if len(m.VideoIdList) > 0 {
		for _, s := range m.VideoIdList {
			l = len(s)
			n += 1 + l + sovServer(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovServer(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozServer(x uint64) (n int) {
	return sovServer(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *UserInfo) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: userInfo: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: userInfo: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cookies", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Cookies == nil {
				m.Cookies = make(map[string]string)
			}
			var mapkey string
			var mapvalue string
			for iNdEx < postIndex {
				entryPreIndex := iNdEx
				var wire uint64
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return ErrIntOverflowServer
					}
					if iNdEx >= l {
						return io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					wire |= uint64(b&0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				fieldNum := int32(wire >> 3)
				if fieldNum == 1 {
					var stringLenmapkey uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowServer
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapkey |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapkey := int(stringLenmapkey)
					if intStringLenmapkey < 0 {
						return ErrInvalidLengthServer
					}
					postStringIndexmapkey := iNdEx + intStringLenmapkey
					if postStringIndexmapkey < 0 {
						return ErrInvalidLengthServer
					}
					if postStringIndexmapkey > l {
						return io.ErrUnexpectedEOF
					}
					mapkey = string(dAtA[iNdEx:postStringIndexmapkey])
					iNdEx = postStringIndexmapkey
				} else if fieldNum == 2 {
					var stringLenmapvalue uint64
					for shift := uint(0); ; shift += 7 {
						if shift >= 64 {
							return ErrIntOverflowServer
						}
						if iNdEx >= l {
							return io.ErrUnexpectedEOF
						}
						b := dAtA[iNdEx]
						iNdEx++
						stringLenmapvalue |= uint64(b&0x7F) << shift
						if b < 0x80 {
							break
						}
					}
					intStringLenmapvalue := int(stringLenmapvalue)
					if intStringLenmapvalue < 0 {
						return ErrInvalidLengthServer
					}
					postStringIndexmapvalue := iNdEx + intStringLenmapvalue
					if postStringIndexmapvalue < 0 {
						return ErrInvalidLengthServer
					}
					if postStringIndexmapvalue > l {
						return io.ErrUnexpectedEOF
					}
					mapvalue = string(dAtA[iNdEx:postStringIndexmapvalue])
					iNdEx = postStringIndexmapvalue
				} else {
					iNdEx = entryPreIndex
					skippy, err := skipServer(dAtA[iNdEx:])
					if err != nil {
						return err
					}
					if (skippy < 0) || (iNdEx+skippy) < 0 {
						return ErrInvalidLengthServer
					}
					if (iNdEx + skippy) > postIndex {
						return io.ErrUnexpectedEOF
					}
					iNdEx += skippy
				}
			}
			m.Cookies[mapkey] = mapvalue
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastHistoryTime", wireType)
			}
			m.LastHistoryTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastHistoryTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdateTime", wireType)
			}
			m.LastUpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *VideoInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: videoInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: videoInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Title", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Title = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Cover", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Cover = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Duration", wireType)
			}
			m.Duration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Duration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field UpdateTime", wireType)
			}
			m.UpdateTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.UpdateTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Tags", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Tags = append(m.Tags, &TagInfoResponse{})
			if err := m.Tags[len(m.Tags)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Classify", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Classify = append(m.Classify, &ClassifyInfoResponse{})
			if err := m.Classify[len(m.Classify)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewNumber", wireType)
			}
			m.ViewNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewNumber |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Danmaku", wireType)
			}
			m.Danmaku = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Danmaku |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Reply", wireType)
			}
			m.Reply = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Reply |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Favorite", wireType)
			}
			m.Favorite = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Favorite |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Coin", wireType)
			}
			m.Coin = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Coin |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 14:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Share", wireType)
			}
			m.Share = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Share |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 15:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field NowRank", wireType)
			}
			m.NowRank = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.NowRank |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 16:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HisRank", wireType)
			}
			m.HisRank = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.HisRank |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 17:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Like", wireType)
			}
			m.Like = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Like |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 18:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dislike", wireType)
			}
			m.Dislike = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Dislike |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 19:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Evaluation", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Evaluation = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 20:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Authors", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Authors = append(m.Authors, &AuthorInfoResponse{})
			if err := m.Authors[len(m.Authors)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 21:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ViewInfo == nil {
				m.ViewInfo = &ViewInfoResponse{}
			}
			if err := m.ViewInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 22:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field WebSiteName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.WebSiteName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *AuthorInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: AuthorInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: AuthorInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Author = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Avatar", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Avatar = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Desc", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Desc = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FollowNumber", wireType)
			}
			m.FollowNumber = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FollowNumber |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *TagInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: tagInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: tagInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ClassifyInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: classifyInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: classifyInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ViewInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: viewInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: viewInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewTime", wireType)
			}
			m.ViewTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ViewDuration", wireType)
			}
			m.ViewDuration = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ViewDuration |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CollectionInfoResponse) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: collectionInfoResponse: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: collectionInfoResponse: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Author", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Author == nil {
				m.Author = &AuthorInfoResponse{}
			}
			if err := m.Author.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field CreatTime", wireType)
			}
			m.CreatTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.CreatTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field AppendTime", wireType)
			}
			m.AppendTime = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.AppendTime |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 50:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorCode", wireType)
			}
			m.ErrorCode = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ErrorCode |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 51:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ErrorMsg", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ErrorMsg = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetVideoListRequest) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowServer
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: getVideoListRequest: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: getVideoListRequest: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field UserInfo", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.UserInfo == nil {
				m.UserInfo = &UserInfo{}
			}
			if err := m.UserInfo.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field VideoIdList", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowServer
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthServer
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthServer
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.VideoIdList = append(m.VideoIdList, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipServer(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthServer
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipServer(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowServer
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowServer
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthServer
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupServer
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthServer
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthServer        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowServer          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupServer = fmt.Errorf("proto: unexpected end of group")
)
